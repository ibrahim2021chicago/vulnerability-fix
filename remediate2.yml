---
- hosts: all

  vars:
    ansible_python_interpreter: auto_legacy_silent

  vars_prompt:
    - name: package_name
      prompt: Enter the Package name
      private: no

  tasks:

    - name: "Extract package name"
      shell:
        cmd: "echo '{{ package_name }}' |
              rev |
              cut -d'-' -f3- |
              rev"
        warn: false
      register: pkg_name

    - name: "Check if package is installed or not"
      shell: 
        cmd: rpm -q "{{ pkg_name.stdout }}"
        warn: false
      register: package_check
      changed_when: false 
      failed_when: false

    - name: "Check if package is available in repo"
      shell: 
        cmd: yum list "{{ package_name }}"
        warn: false
      register: pkg_avl
      changed_when: false 
      failed_when: false
    
    - name: "Convert given package into numeric string"
      shell:
        cmd: "echo '{{ package_name }}' |
              tr -d -c 0-9"
        warn: false
      register: package_version

    - name: "Convert installed package into numeric string"
      shell:
        cmd: "echo '{{ package_check.stdout }}' |
              tr -d -c 0-9"
        warn: false
      register: pkg_version
      when: "'not installed' not in package_check.stdout"

    - debug:
        msg: "Same package version is installed, Nothing to do!"
      when:
        - "'not installed' not in package_check.stdout"
        - package_version.stdout == pkg_version.stdout

    - debug:
        msg: "Package not installed"
      when: "'not installed' in package_check.stdout"

    - pause:
        prompt: Do you want to install (y/n)?
      register: install
      run_once: true
      delegate_to: localhost

    - name: "Install package"
      shell:
        cmd: yum install -y "{{ package_name }}"
        warn: false
      become: yes
      async: 300
      poll: 5
      when:
        - install.user_input|lower == 'y'
        - "'not installed' in package_check.stdout"
        - "'Error: No matching Packages to list' not in pkg_avl.stderr"

    - debug:
        msg:
          - "Lower package version is installed"
          - "{{ package_check.stdout }}"
      when:
        - "'not installed' not in package_check.stdout"
        - package_version.stdout > pkg_version.stdout
  
    - pause:
        prompt: Do you want to upgrade (y/n)?
      register: upgrade
      run_once: true
      delegate_to: localhost

    - name: "Upgrade package"
      shell:
        cmd: yum install -y "{{ package_name }}"
        warn: false
      become: yes
      async: 300
      poll: 5
      when:
        - upgrade.user_input|lower == 'y'
        - "'not installed' not in package_check.stdout"
        - package_version.stdout > pkg_version.stdout
        - "'Error: No matching Packages to list' not in pkg_avl.stderr"        

    - debug:
        msg:
          - "Higher package version is installed"
          -   "{{ package_check.stdout }}"
      when:
        - "'not installed' not in package_check.stdout"
        - package_version.stdout < pkg_version.stdout

    - pause:
        prompt: Do you want to remove (y/n)?
      register: remove
      run_once: true
      delegate_to: localhost

    - name: "Remove package"
      shell:
        cmd: yum remove -y "{{ pkg_name.stdout }}" && yum install -y "{{ package_name }}"
        warn: false
      become: yes
      async: 300
      poll: 5
      when:
        - remove.user_input|lower == 'y'
        - "'not installed' not in package_check.stdout"
        - package_version.stdout < pkg_version.stdout
        - "'Error: No matching Packages to list' not in pkg_avl.stderr"