---
- hosts: all

  vars:
    ansible_python_interpreter: auto_legacy_silent

  vars_prompt:
    - name: package_name
      prompt: Enter the Package name
      private: no

  tasks:

    - name: "Check if package is installed or not"
      shell: 
        cmd: rpm -qa | grep "{{ package_name }}"
        warn: false
      register: package_check
      changed_when: false 
      failed_when: false
    
    - name: "Print execution results when same package version installed"
      debug:
        msg: "Package {{ package_name }} is installed"
      when: package_name in package_check.stdout
    
    - name: "Print execution results when package version not matched/installed"
      debug:
        msg: "Package {{ package_name }} is not installed"
      when: package_check.stdout == ""

    - name: "Remove old file"
      local_action: file path=./scan.csv state=absent
    
    - name: "Set header"
      shell: echo 'Hostname,IP_Address,Distribution,Version,Package_name,Installation_status' > ./scan.csv
      run_once: true
      delegate_to: localhost
    
    - name: "Write data to file when Package installed"
      shell: echo {{ ansible_hostname }},{{ ansible_default_ipv4.address }},{{ ansible_distribution }},{{ ansible_distribution_version }},{{ package_name }},Installed >> ./scan.csv
      delegate_to: localhost
      when: package_name in package_check.stdout

    - name: "Write data to file when Package not installed"
      shell: echo {{ ansible_hostname }},{{ ansible_default_ipv4.address }},{{ ansible_distribution }},{{ ansible_distribution_version }},{{ package_name }},Not Installed >> ./scan.csv
      delegate_to: localhost
      when: package_check.stdout == ""