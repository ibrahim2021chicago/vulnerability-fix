---
- hosts: all

  vars:
    ansible_python_interpreter: auto_legacy_silent
  
  vars_files:
    - package_list.yml

  tasks:

    - name: "Check if package is installed or not"
      shell: 
        cmd: rpm -qa | grep "{{ item }}"
        warn: false
      with_items: "{{ package_list }}"
      register: package_check
      changed_when: false 
      failed_when: false
    
    # - debug:
    #     msg: "{{ package_check }}"
    
    - name: "Print execution results when same package version installed"
      debug:
        msg: "Package {{ item.1 }} is installed"
      when: item.2 is defined
      with_items:
        - '{{ package_list }}'
        - '{{ package_check.results }}'
    
    - name: "Print execution results when package version not matched/installed"
      debug:
        msg: "Package {{ item.1 }} is not installed"
      when: item.2 is not defined
      with_items:
        - '{{ package_list }}'
        - '{{ package_check.results }}'
    
    # - name: "Set header"
    #   shell: echo 'Hostname,IP_Address,Distribution,Version,Package_name,Installation_status' > ./scan.csv
    #   run_once: true
    #   delegate_to: localhost
    
    # - name: "Write data to file when Package installed"
    #   shell: echo {{ ansible_hostname }},{{ ansible_default_ipv4.address }},{{ ansible_distribution }},{{ ansible_distribution_version }},{{ package_name }},Installed >> ./scan.csv
    #   delegate_to: localhost
    #   when: package_name in package_check.stdout

    # - name: "Write data to file when Package not installed"
    #   shell: echo {{ ansible_hostname }},{{ ansible_default_ipv4.address }},{{ ansible_distribution }},{{ ansible_distribution_version }},{{ package_name }},Not Installed >> ./scan.csv
    #   delegate_to: localhost
    #   when: package_check.stdout == ""